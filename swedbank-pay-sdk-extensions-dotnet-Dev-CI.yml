trigger:
- develop

pr:
- develop

pool:
  name: 'Hosted VS2017'
  demands:
  - msbuild
  - visualstudio

variables:
  GitVersion.SemVer: ''

steps:

- task: GitVersion@5 
  displayName: GitVersion
  inputs:
    versionSpec: '5.x'
    runtime: 'core'
    useConfigFile: true
    configFilePath: GitVersion.yml


- task: UseDotNet@2
  displayName: 'Setting up framework for build'
  inputs:
    packageType: 'sdk'
    version: '3.1.101'
    installationPath: $(Agent.TempDirectory)/dotnet

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.3.1'

- task: NuGetCommand@2
  displayName: 'Restoring packages'
  inputs:
     command: 'restore'
     restoreSolution: '$(Build.SourcesDirectory)\src\SwedbankPay.Sdk.Extensions.sln'
     feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build solution for .net core projects'
  inputs:
    command: 'build'
    projects: |
      **/*.sln
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(GitVersion.NuGetVersionV2)'

#- task: DotNetCoreCLI@2
#  displayName: 'Create release'
#  inputs:
#    command: 'publish'
#    publishWebProjects: true
#    zipAfterPublish: true
#    arguments: '--output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersionV2)'


- task: DotNetCoreCLI@2
  displayName: 'Create NuGet Package - $(buildConfiguration) Version'
  inputs:
    command: 'pack'
    packagesToPack: '$(Build.SourcesDirectory)\src\SwedbankPay.Sdk.Extensions\SwedbankPay.Sdk.Extensions.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'
    nobuild: true
    versioningScheme: 'off'
    buildProperties: 'PackageVersion=$(GitVersion.NuGetVersionV2)'


- task: PublishBuildArtifacts@1
  displayName: 'Publish .net core build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'


